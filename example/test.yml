---
- hosts: all
  become: true
  tasks:

    # Use Case - add repo; specify file; remove repo only if it exists inside the specified file
    - name: install elasticsearch 6.x rpm repository
      ansible.builtin.yum_repository:
        name: elasticsearch-6.x
        description: Elasticsearch repository for 6.x packages
        baseurl: https://artifacts.elastic.co/packages/6.x/yum
        gpgcheck: true
        gpgkey: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        file: elastic
    - name: install elasticsearch 6.x rpm repository
      ansible.builtin.yum_repository:
        name: elasticsearch-7.x
        description: Elasticsearch repository for 7.x packages
        baseurl: https://artifacts.elastic.co/packages/7.x/yum
        gpgcheck: true
        gpgkey: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        file: elastic
    # Use Case - add repo; without specifying file; remove repo only if it exists inside the default file
    - name: install elasticsearch 6.x rpm repository
      ansible.builtin.yum_repository:
        name: elasticsearch-7.x
        description: Elasticsearch repository for 7.x packages
        baseurl: https://artifacts.elastic.co/packages/7.x/yum
        gpgcheck: true
        gpgkey: https://artifacts.elastic.co/GPG-KEY-elasticsearch

    # Use Case - remove repo; without specifying file; removes it from all files in `reposdir` folder
    # Issue #1 - module assumes the repo is located in the file with same name
    # So this won't work if the repo is in 1 or more files with different names
    - name: Deactivate elasticsearch-7.x
      ansible.builtin.yum_repository:
        name: elasticsearch-7.x
        state: present
        enabled: no

    # - name: Remove repository (and clean up left-over metadata)
    #   ansible.builtin.yum_repository:
    #     name: elasticsearch-7.x
    #     state: absent
        #reposdir: '/etc/'

    # - name: Get all YUM repositories
    #   shell: 'yum repolist all -v'
    #   register: results
    #   args:
    #       warn: false
    # - debug: var=results
    # - fail:
    # - set_fact:
    #     repos: "{{ results.stdout | to_repos }}"

    # - ansible.builtin.yum_repository:
    #     name: "{{ item.id }}"
    #     file: "{{ item.filename }}"
    #     state: absent
    #     #force: yes
    #   with_items: "{{ repos }}"